\select@language {ngerman}
\select@language {english}
\select@language {ngerman}
\select@language {english}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces The left side shows the \gls {aDDa} car, the right side illustrates the results of one of the experiments cases when the prediction, where the car is going, was made. Hereby the probabilistic model considers also the variance in the demonstrated trajectories, depicted in green, blue and pink\relax }}{2}{figure.caption.22}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Motion Modeling Overview \cite {ClassificationI}\relax }}{5}{figure.caption.23}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces X intersection map in the left and T intersection map on the right\relax }}{9}{figure.caption.24}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Contours for T (left) and for X (right) intersection maps, received as one of outputs of map recognition, using contours method\relax }}{10}{figure.caption.25}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Dataset for T intersection recognition, used for testing \gls {SSIM} method\relax }}{11}{figure.caption.26}
\contentsline {figure}{\numberline {3.4}{\ignorespaces \gls {SSIM} value for different images from data set as compared with the original one. Index of similarity for the original picture is equal to 1, for pictures with added object similarity index is equal to 0.6 and index of similarity for a rotated picture with object added is 0.26. SSIM index can vary from -1 to 1\relax }}{11}{figure.caption.27}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Pseudo code for interpolation process\relax }}{12}{figure.caption.28}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Original and Interpolated Trajectories. Red lines show the original trajectories of going to the right, left and straight direction. The number of time steps which has original trajectories which go to the right, straight and left have $7,581$, $13,666$ and $10,929$ time steps respectively. Blue dotted line represents interpolation of the same trajectories. Interpolation was done for $10$ time steps\relax }}{12}{figure.caption.29}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Pseudo Code for Updating belief\relax }}{16}{figure.caption.30}
\contentsline {figure}{\numberline {3.8}{\ignorespaces Pseudo Code for Scaling Trajectory for Belief Update\relax }}{17}{figure.caption.31}
\contentsline {figure}{\numberline {3.9}{\ignorespaces Error value between original and reconstructed trajectories\relax }}{19}{figure.caption.32}
\contentsline {figure}{\numberline {3.10}{\ignorespaces All primitives from \gls {ProMPs}. The first picture shows how \glspl {RBF} looks like, the second and third pictures shows primitives and demonstrations for x and y dimensions respectively and the last picture shows the full trajectory\relax }}{19}{figure.caption.33}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Experiments were made having two environments: T and X intersection. The figure illustrates how these environments look like in \gls {RViz} - \gls {ROS} visualization tool, where simulations were run\relax }}{20}{figure.caption.34}
\contentsline {figure}{\numberline {4.2}{\ignorespaces On the right side graphical user interface is shown, it helps with the simulated data recording process, left side briefly illustrates data collection process, using \gls {ROS} Joystick node\relax }}{21}{figure.caption.35}
\contentsline {figure}{\numberline {4.3}{\ignorespaces On the left side is the picture shows how data collection looked like and the right side shows where \gls {ADMA} sensor is in the car\relax }}{21}{figure.caption.36}
\contentsline {figure}{\numberline {4.4}{\ignorespaces The workflow of the probabilistic intention prediction algorithm. Starting with the map recognition process, according to the map initial belief is initialized. After that trajectories, unification and initial prediction model creation happened. The last step when we have all this initial information is to make predictions for that we need last belief, current car position and learned data, when prediction is made, it is checking if trajectory is over, if yes, then algorithm is ending, if not, then cycle with updated belief and new observation is continuing\relax }}{22}{figure.caption.37}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces The left side of the figure shows how X-Intersection map, used for experiments, looks like. The right side of the figure shows the probabilistic prediction model, learned by algorithm: blue, magenta and green areas show the mean trajectory and standard deviation for respectively \leavevmode {\color {blue}right}, \leavevmode {\color {magenta}straight} and \leavevmode {\color {green}left} movement classes. The right side of the figure contains other important information: movement \leavevmode {\color {red}start position} is $x_0,y_0 = (14.5, 2.0)$, illustrated with red rectangular and initial belief for each movement class with this setup is $b_0 = (0.333, 0.333, 0.333)$\relax }}{23}{figure.caption.38}
\contentsline {figure}{\numberline {5.2}{\ignorespaces The figure shows, trajectories with which experiments were made. \leavevmode {\color {red}Testing trajectories} are in red. The picture on the left shows a trajectory which classified as right, middle picture - as straight and the right picture as left movement class. Testing trajectories do not belong to the training data set\relax }}{24}{figure.caption.40}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Process of prediction making for trajectory which belongs to the right movement class. Trajectory has $10$-time steps (counting from $0$ to $9$) and results after each time step are shown separately. After Step = $4$ prediction that movement is to the right is equal to $1.0$, due to that lack of space and the same result, we skipped to show step = $5$ - $8$\relax }}{25}{figure.caption.45}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Belief changes over time. $10$ random trajectories (which does not belong to training data set) were interpolated for $100$-time steps and tested with probabilistic intention prediction algorithm to see what is the pattern of for recognizing trajectories. Results shows that all trajectories were recognized correctly, just for some of them it took more time to be predict correctly. All tested trajectories belong to the same movement class. Movement class is right\relax }}{26}{figure.caption.46}
\contentsline {figure}{\numberline {5.5}{\ignorespaces The fastest trajectory to recognize, taken from Figure~\ref {fig:10Rights}. On the left side of the figure belief changing over time is shown, from it is possible to see that trajectory is correctly recognized within $20$ steps (out of $100$). The right image shows how the fastest trajectory to recognize looks like. Trajectory direction is right\relax }}{26}{figure.caption.47}
\contentsline {figure}{\numberline {5.6}{\ignorespaces The slowest trajectory to recognize, taken from Figure~\ref {fig:10Rights}. On the left side of the figure belief changing over time is shown, from it is possible to see that trajectory is correctly recognized within more than $40$ steps (out of $100$). The right image shows how the slowest trajectory to recognize looks like. Trajectory direction is right\relax }}{26}{figure.caption.48}
\contentsline {figure}{\numberline {5.7}{\ignorespaces Process of prediction making for trajectory which belongs to the straight movement class. Trajectory has $10$-time steps (counting from $0$ to $9$) and results after each time step are shown separately. After Step = $4$ prediction that movement is to straight is equal to $0.997$ and only getting bigger, due to that lack of space and the same result, we skipped to show step = $5$ - $8$\relax }}{27}{figure.caption.50}
\contentsline {figure}{\numberline {5.8}{\ignorespaces Belief changes over time. $10$ random trajectories (which does not belong to training data set) were interpolated for $100$-time steps and tested with movement recognition algorithm to see which trajectory is predicted correctly faster and which slower. All tested trajectories belong to the same movement class. Movement class is straight\relax }}{28}{figure.caption.51}
\contentsline {figure}{\numberline {5.9}{\ignorespaces The fastest trajectory to predict correctly, taken from Figure~\ref {fig:10Straight}. On the left side of the figure belief changing over time is shown, from it is possible to see that trajectory is correctly recognized within $30$ steps (out of $100$). The right image shows how the best trajectory looks like. Trajectory direction is straight\relax }}{28}{figure.caption.52}
\contentsline {figure}{\numberline {5.10}{\ignorespaces The slowest trajectory to be predicted correctly, taken from Figure~\ref {fig:10Straight}. On the left side of the figure belief changing over time is shown, from it is possible to see that trajectory is correctly recognized within more than $50$ steps (out of $100$). The right image shows how the worse trajectory looks like. Trajectory direction is straight\relax }}{28}{figure.caption.53}
\contentsline {figure}{\numberline {5.11}{\ignorespaces Process of prediction making for trajectory which belongs to the straight movement class. Trajectory has $10$-time steps (counting from $0$ to $9$) and results after each time step are shown separately. After Step = $2$ prediction that movement is to straight is equal to $0.999$ and only getting bigger, due to that lack of space and the same result, we skipped to show step = $4$ - $8$\relax }}{29}{figure.caption.55}
\contentsline {figure}{\numberline {5.12}{\ignorespaces Belief changes over time. $10$ random trajectories (which does not belong to training data set) were interpolated for $100$-time steps and tested with movement recognition algorithm to see which trajectory is easier recognized (better) and which one is more difficult (worse) to recognize correctly. All tested trajectories belong to the same movement class. Movement class is left\relax }}{29}{figure.caption.56}
\contentsline {figure}{\numberline {5.13}{\ignorespaces The fastest recognizable trajectory, taken from Figure~\ref {fig:10Left}. On the left side of the figure belief changing over time is shown, from it is possible to see that trajectory is correctly recognized within the first $20$ steps (out of $100$). The right image shows how the best trajectory looks like. Trajectory direction is left\relax }}{30}{figure.caption.57}
\contentsline {figure}{\numberline {5.14}{\ignorespaces The slowest recognizable trajectory, taken from Figure~\ref {fig:10Left}. On the left side of the figure belief changing over time is shown, fromit is possible to see that trajectory is correctly recognized within more than $50$ steps (out of $100$). The right image shows how the worse trajectory looks like. Trajectory direction is left\relax }}{30}{figure.caption.58}
\contentsline {figure}{\numberline {5.15}{\ignorespaces The left side of the figure shows how T-Intersection map, used for experiments, looks like. The right side of the figure shows the probabilistic prediction model, learned by algorithm: blue and green areas show the mean trajectory and standard deviation for respectively \leavevmode {\color {blue}right} and \leavevmode {\color {green}left} movement classes. The right side of the figure contains other important information: movement \leavevmode {\color {red}start position} is $x_0,y_0 = (14.5, 2.0)$ and initial belief for each movement class, which is $b_0 \text {[left, right]}= (0.533, 0.467)$\relax }}{30}{figure.caption.59}
\contentsline {figure}{\numberline {5.16}{\ignorespaces The figure shows random \leavevmode {\color {red}testing trajectories} in red for each movement class. The picture on the left shows a trajectory from the right class and the right picture represents left movement class. Testing trajectories do not belong to the training data set\relax }}{31}{figure.caption.61}
\contentsline {figure}{\numberline {5.17}{\ignorespaces Belief changes over time. $10$ random trajectories (which does not belong to training data set) were interpolated for $100$-time steps and tested with movement recognition algorithm to see which trajectory is faster and which is slower recognizable. All tested trajectories belong to the same movement class. Movement class is right\relax }}{32}{figure.caption.66}
\contentsline {figure}{\numberline {5.18}{\ignorespaces The fastest trajectory to recognize, taken from Figure~\ref {fig:10Left}. On the left side of the figure belief changing over time is shown, from it it is possible to see that trajectory is correctly recognized within the first $10$ steps (out of $100$). The right image shows how the best trajectory looks like. Trajectory direction is right\relax }}{32}{figure.caption.67}
\contentsline {figure}{\numberline {5.19}{\ignorespaces The slowest trajectory in correct recognition, taken from Figure~\ref {fig:10Left}. On the left side of the figure belief changing over time is shown, from it it is possible to see that trajectory is correctly recognized within more than $30$ steps (out of $100$). The right image shows how the worse trajectory looks like. Trajectory direction is right\relax }}{33}{figure.caption.68}
\contentsline {figure}{\numberline {5.20}{\ignorespaces Belief changes over time. $10$ random trajectories (which does not belong to training data set) were interpolated for $100$-time steps and tested with movement recognition algorithm to see which trajectory is faster and which is slower recognizable. All tested trajectories belong to the same movement class. Movement class is left\relax }}{33}{figure.caption.71}
\contentsline {figure}{\numberline {5.21}{\ignorespaces The fastest trajectory to recognize, taken from Figure~\ref {fig:10Left}. On the left side of the figure belief changing over time is shown, from it it is possible to see that trajectory is correctly recognized within the first $20$ steps (out of $100$). The right image shows how the best trajectory looks like. Trajectory direction is left\relax }}{34}{figure.caption.72}
\contentsline {figure}{\numberline {5.22}{\ignorespaces The slowest trajectory to recognize, taken from Figure~\ref {fig:10Left}. On the left side of the figure belief changing over time is shown, from it it is possible to see that trajectory is correctly recognized within more than $30$ steps (out of $100$). The right image shows how the worse trajectory looks like. Trajectory direction is left\relax }}{34}{figure.caption.73}
\contentsline {figure}{\numberline {5.23}{\ignorespaces Belief updates over time. The picture on the left side of the figure shows the original belief update for the same trajectory interpolated for $10$ and $100$ time steps. The right side of the figure shows the prediction making process including scaling for the same trajectory interpolated for $10$ and $100$ time steps. For better visibility from trajectory with $100$ time steps was printed only $10$ points, matching points in from trajectory with $10$ time steps. Trajectory direction is right\relax }}{35}{figure.caption.80}
\contentsline {figure}{\numberline {5.24}{\ignorespaces Belief updates over time. The picture on the left side of the figure shows the original belief update for the same trajectory interpolated for $10$ and $100$ time steps. The right side of the figure shows the prediction making process including scaling for the same trajectory interpolated for $10$ and $100$ time steps. For better visibility from trajectory with $100$ time steps was printed only $10$ points, matching points in from trajectory with $10$ time steps. Trajectory direction is straight\relax }}{36}{figure.caption.81}
\contentsline {figure}{\numberline {5.25}{\ignorespaces Belief updates over time. The picture on the left side of the figure shows the original belief update for the same trajectory interpolated for $10$ and $100$ time steps. The right side of the figure shows the prediction making process including scaling for the same trajectory interpolated for $10$ and $100$ time steps. For better visibility from trajectory with $100$ time steps was printed only $10$ points, matching points in from trajectory with $10$ time steps. Trajectory direction is left\relax }}{36}{figure.caption.82}
\contentsline {figure}{\numberline {5.26}{\ignorespaces Belief updates over time. The picture on the left side of the figure shows the original belief update for the same trajectory interpolated for $10$ and $100$ time steps. The right side of the figure shows the prediction making process including scaling for the same trajectory interpolated for $10$ and $100$ time steps. For better visibility from trajectory with $100$ time steps was printed only $10$ points, matching points in from trajectory with $10$ time steps. Trajectory direction is right\relax }}{36}{figure.caption.84}
\contentsline {figure}{\numberline {5.27}{\ignorespaces Belief updates over time. The picture on the left side of the figure shows the original belief update for the same trajectory interpolated for $10$ and $100$ time steps. The right side of the figure shows the prediction making process including scaling for the same trajectory interpolated for $10$ and $100$ time steps. For better visibility from trajectory with $100$ time steps was printed only $10$ points, matching points in from trajectory with $10$ time steps. Trajectory direction is left\relax }}{37}{figure.caption.85}
\contentsline {figure}{\numberline {5.28}{\ignorespaces \leavevmode {\color {red}Reconstructed trajectory by means} from probabilistic prediction model. \leavevmode {\color {gray}All pre-recorded demonstrations} and \textbf {mean trajectory}, from probabilistic prediction model\relax }}{37}{figure.caption.86}
\contentsline {figure}{\numberline {5.29}{\ignorespaces Trajectories recorded with a real aDDa car. The duration of plotted trajectories is 9 seconds each. Length of trajectories does not match for several reasons: because of duration unification, car speed and different real trajectory length (one turn was longer, another shorter, etc.)\relax }}{38}{figure.caption.87}
\contentsline {figure}{\numberline {5.30}{\ignorespaces The image on the left side of the figure shows belief updates over time and on the right red dotted line is the tested trajectory, interpolated for $10$ time steps\relax }}{38}{figure.caption.88}
\contentsline {figure}{\numberline {5.31}{\ignorespaces The image on the left side of the figure shows belief updates over time and on the right red dotted line is the tested trajectory, interpolated for $10$ time steps\relax }}{39}{figure.caption.90}
\contentsline {figure}{\numberline {5.32}{\ignorespaces The image on the left side of the figure shows belief updates over time and on the right red dotted line is the tested trajectory, interpolated for $10$ time steps\relax }}{40}{figure.caption.92}
\contentsline {figure}{\numberline {5.33}{\ignorespaces Error dependence on number of \gls {RBF}.The right side of the figure shows error for the right movement class, the middle for the straight and the left one - for the left movement class. We can see that the smallest value of trajectory error is when we have $6$ and more \gls {RBF}\relax }}{41}{figure.caption.94}
\contentsline {figure}{\numberline {5.34}{\ignorespaces Reconstructed trajectories. The left side of the figure shows reconstructed x-axis, picture in the middle illustrates reconstructed y-axis, the right side of the figure shows the full reconstructed trajectory. \leavevmode {\color {blue}Blue} line shows reconstructed trajectory, for which reconstruction was used mean of weights of all learning data set, \textbf {black} line shows trajectory reconstructed by weights from one trajectory and \leavevmode {\color {red}red} line shows original trajectory. Movement direction is right\relax }}{41}{figure.caption.95}
\contentsline {figure}{\numberline {5.35}{\ignorespaces Reconstructed trajectories. The left side of the figure shows reconstructed x-axis, picture in the middle illustrates reconstructed y-axis, the right side of the figure shows the full reconstructed trajectory. \leavevmode {\color {blue}Blue} line shows reconstructed trajectory, for which reconstruction was used mean of weights of all learning data set, \textbf {black} line shows trajectory reconstructed by weights from one trajectory and \leavevmode {\color {red}red} line shows original trajectory. Movement direction is left\relax }}{41}{figure.caption.96}
\contentsline {figure}{\numberline {5.36}{\ignorespaces Reconstructed trajectories. The left side of the figure shows reconstructed x-axis, picture in the middle illustrates reconstructed y-axis, the right side of the figure shows the full reconstructed trajectory. \leavevmode {\color {blue}Blue} line shows reconstructed trajectory, for which reconstruction was used mean of weights of all learning data set, \textbf {black} line shows trajectory reconstructed by weights from one trajectory and \leavevmode {\color {red}red} line shows original trajectory. Movement direction is straight\relax }}{42}{figure.caption.97}
\contentsline {figure}{\numberline {5.37}{\ignorespaces Few captures from proposed probabilistic intention prediction algorithm working on real-time data. The upper left side shows the prediction made while starting to drive. The upper right picture shows results while moving towards the left direction, the bottom left illustrates straight movement class and the bottom right one - right side\relax }}{43}{figure.caption.98}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Autonomous Vehicle Attack Taxonomy, proposed in \cite {sec}\relax }}{45}{figure.caption.99}
\contentsline {figure}{\numberline {6.2}{\ignorespaces Autonomous Vehicle Defense Taxonomy, proposed in \cite {sec}\relax }}{47}{figure.caption.102}
\contentsline {figure}{\numberline {6.3}{\ignorespaces The upper line of pictures shows the correctly recognized images (pictures had no adversarial information combined with original image). The bottom line of pictures shows captured pictures, combined with adversarial information, and what is recognized with the same algorithm \cite {blackBox1}\relax }}{53}{figure.caption.112}
\contentsline {figure}{\numberline {6.4}{\ignorespaces Small perturbations on signs resulted in misclassification of stop signs and think that it is speed limit 45 sign. The sign to turn right was recognized as a stop sign \cite {signs}\relax }}{54}{figure.caption.113}
\contentsline {figure}{\numberline {6.5}{\ignorespaces Camouflage graffiti and art stickers caused visual recognition algorithms to recognize stop sign as speed limit 45 \cite {signs}\relax }}{54}{figure.caption.114}
\contentsline {figure}{\numberline {6.6}{\ignorespaces The Basic Data-Generating Devices and Flows in Autonomous Cars \cite {PicPrivacy}\relax }}{55}{figure.caption.115}
\addvspace {10\p@ }
